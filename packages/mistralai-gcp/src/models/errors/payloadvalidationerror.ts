/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  HTTPValidationError,
  HTTPValidationError$inboundSchema,
  HTTPValidationError$Outbound,
  HTTPValidationError$outboundSchema,
} from "./httpvalidationerror.js";
import {
  WrappedHTTPValidationError,
  WrappedHTTPValidationError$inboundSchema,
  WrappedHTTPValidationError$Outbound,
  WrappedHTTPValidationError$outboundSchema,
} from "./wrappedhttpvalidationerror.js";

export type PayloadValidationError =
  | WrappedHTTPValidationError
  | HTTPValidationError;

/** @internal */
export const PayloadValidationError$inboundSchema: z.ZodType<
  PayloadValidationError,
  z.ZodTypeDef,
  unknown
> = z.union([
  WrappedHTTPValidationError$inboundSchema,
  HTTPValidationError$inboundSchema,
]);

/** @internal */
export type PayloadValidationError$Outbound =
  | WrappedHTTPValidationError$Outbound
  | HTTPValidationError$Outbound;

/** @internal */
export const PayloadValidationError$outboundSchema: z.ZodType<
  PayloadValidationError$Outbound,
  z.ZodTypeDef,
  PayloadValidationError
> = z.union([
  WrappedHTTPValidationError$outboundSchema,
  HTTPValidationError$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayloadValidationError$ {
  /** @deprecated use `PayloadValidationError$inboundSchema` instead. */
  export const inboundSchema = PayloadValidationError$inboundSchema;
  /** @deprecated use `PayloadValidationError$outboundSchema` instead. */
  export const outboundSchema = PayloadValidationError$outboundSchema;
  /** @deprecated use `PayloadValidationError$Outbound` instead. */
  export type Outbound = PayloadValidationError$Outbound;
}
